@model List<SistemaVotacao.Controllers.VotoViewModel>
@using SistemaVotacao.Autenticação

@{
    var role = Context.Session.GetString(SessionKeys.UserRole);
}

<h2>Votos</h2>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Eleitor</th>
            <th>Candidato</th>
            <th>Data do Voto</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var voto in Model)
        {
            <tr>
                <td>@voto.nome_eleitor</td>
                <td>@voto.nome_candidato</td>
                <td>@voto.data_voto.ToString("dd/MM/yyyy HH:mm")</td>
                <td>
                    @* Botão Edit: Adm, Gerente sempre; Comum só se for seu voto *@
                    @if (role == "Adm" || role == "Gerente" || (role == "Comum" && voto.id_eleitor == Context.Session.GetInt32(SessionKeys.UserId)))
                    {
                        <a asp-action="Edit" asp-route-id="@voto.id_voto" class="btn btn-sm btn-primary">Editar</a>
                    }

                    @* Botão Delete: só para Adm *@
                    @if (role == "Adm")
                    {
                        <form asp-action="Delete" asp-route-id="@voto.id_voto" method="post" style="display:inline">
                            <input type="hidden" name="__RequestVerificationToken" value="@Antiforgery.GetTokens(HttpContext).RequestToken" />
                            <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Deseja realmente excluir este voto?')">Excluir</button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (role == "Comum")
{
    <a asp-action="Create" class="btn btn-success">Votar</a>
}
